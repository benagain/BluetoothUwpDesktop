// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: credentialservice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace com.intercede.BluetoothSmartcard.Commands {

  /// <summary>Holder for reflection information generated from credentialservice.proto</summary>
  public static partial class CredentialserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for credentialservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CredentialserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdjcmVkZW50aWFsc2VydmljZS5wcm90bxITYmx1ZXRvb3RoLnNtYXJ0Y2Fy",
            "ZCKEAQoHQ29tbWFuZBIxCghzaWduRGF0YRgBIAEoCzIdLmJsdWV0b290aC5z",
            "bWFydGNhcmQuU2lnbkRhdGFIABI/Cg9yZWFkQ3JlZGVudGlhbHMYAiABKAsy",
            "JC5ibHVldG9vdGguc21hcnRjYXJkLlJlYWRDcmVkZW50aWFsc0gAQgUKA2Nt",
            "ZCKNAQoIU2lnbkRhdGESOAoHcmVxdWVzdBgBIAEoCzIlLmJsdWV0b290aC5z",
            "bWFydGNhcmQuU2lnbmF0dXJlUmVxdWVzdEgAEjoKCHJlc3BvbnNlGAIgASgL",
            "MiYuYmx1ZXRvb3RoLnNtYXJ0Y2FyZC5TaWduYXR1cmVSZXNwb25zZUgAQgsK",
            "CWRpcmVjdGlvbiKWAQoPUmVhZENyZWRlbnRpYWxzEjkKB3JlcXVlc3QYASAB",
            "KAsyJi5ibHVldG9vdGguc21hcnRjYXJkLkNyZWRlbnRpYWxSZXF1ZXN0SAAS",
            "OwoIcmVzcG9uc2UYAiABKAsyJy5ibHVldG9vdGguc21hcnRjYXJkLkNyZWRl",
            "bnRpYWxSZXNwb25zZUgAQgsKCWRpcmVjdGlvbiKdAQoRQ3JlZGVudGlhbFJl",
            "cXVlc3QSPgoFdXNhZ2UYASABKA4yLy5ibHVldG9vdGguc21hcnRjYXJkLkNy",
            "ZWRlbnRpYWxSZXF1ZXN0LktleVVzYWdlIkgKCEtleVVzYWdlEgwKCE5PX1VT",
            "QUdFEAASCAoEU0lHThABEgsKB0VOQ1JZUFQQAhIKCgZWRVJJRlkQBBILCgdE",
            "RUNSWVBUEAgiNAoKQ3JlZGVudGlhbBISCgppZGVudGlmaWVyGAEgASgMEhIK",
            "CmNyZWRlbnRpYWwYAiABKAwiSgoSQ3JlZGVudGlhbFJlc3BvbnNlEjQKC2Ny",
            "ZWRlbnRpYWxzGAEgAygLMh8uYmx1ZXRvb3RoLnNtYXJ0Y2FyZC5DcmVkZW50",
            "aWFsIiUKEFNpZ25hdHVyZVJlcXVlc3QSEQoJcGxhaW50ZXh0GAEgASgMIiYK",
            "EVNpZ25hdHVyZVJlc3BvbnNlEhEKCXNpZ25hdHVyZRgBIAEoDEJqCiljb20u",
            "aW50ZXJjZWRlLmJsdWV0b290aHNtYXJ0Y2FyZC5jb21tYW5kc0IOU2lnbkRh",
            "dGFQcm90b3OAAQGqAiljb20uaW50ZXJjZWRlLkJsdWV0b290aFNtYXJ0Y2Fy",
            "ZC5Db21tYW5kc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.Command), global::com.intercede.BluetoothSmartcard.Commands.Command.Parser, new[]{ "SignData", "ReadCredentials" }, new[]{ "Cmd" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.SignData), global::com.intercede.BluetoothSmartcard.Commands.SignData.Parser, new[]{ "Request", "Response" }, new[]{ "Direction" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials), global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials.Parser, new[]{ "Request", "Response" }, new[]{ "Direction" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest), global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest.Parser, new[]{ "Usage" }, null, new[]{ typeof(global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest.Types.KeyUsage) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.Credential), global::com.intercede.BluetoothSmartcard.Commands.Credential.Parser, new[]{ "Identifier", "Credential_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse), global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse.Parser, new[]{ "Credentials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest), global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest.Parser, new[]{ "Plaintext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse), global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse.Parser, new[]{ "Signature" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Command is the top-level message that is transmitted between
  /// PC and mobile device.
  /// </summary>
  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      switch (other.CmdCase) {
        case CmdOneofCase.SignData:
          SignData = other.SignData.Clone();
          break;
        case CmdOneofCase.ReadCredentials:
          ReadCredentials = other.ReadCredentials.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "signData" field.</summary>
    public const int SignDataFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.SignData SignData {
      get { return cmdCase_ == CmdOneofCase.SignData ? (global::com.intercede.BluetoothSmartcard.Commands.SignData) cmd_ : null; }
      set {
        cmd_ = value;
        cmdCase_ = value == null ? CmdOneofCase.None : CmdOneofCase.SignData;
      }
    }

    /// <summary>Field number for the "readCredentials" field.</summary>
    public const int ReadCredentialsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials ReadCredentials {
      get { return cmdCase_ == CmdOneofCase.ReadCredentials ? (global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials) cmd_ : null; }
      set {
        cmd_ = value;
        cmdCase_ = value == null ? CmdOneofCase.None : CmdOneofCase.ReadCredentials;
      }
    }

    private object cmd_;
    /// <summary>Enum of possible cases for the "cmd" oneof.</summary>
    public enum CmdOneofCase {
      None = 0,
      SignData = 1,
      ReadCredentials = 2,
    }
    private CmdOneofCase cmdCase_ = CmdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdOneofCase CmdCase {
      get { return cmdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCmd() {
      cmdCase_ = CmdOneofCase.None;
      cmd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SignData, other.SignData)) return false;
      if (!object.Equals(ReadCredentials, other.ReadCredentials)) return false;
      if (CmdCase != other.CmdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cmdCase_ == CmdOneofCase.SignData) hash ^= SignData.GetHashCode();
      if (cmdCase_ == CmdOneofCase.ReadCredentials) hash ^= ReadCredentials.GetHashCode();
      hash ^= (int) cmdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cmdCase_ == CmdOneofCase.SignData) {
        output.WriteRawTag(10);
        output.WriteMessage(SignData);
      }
      if (cmdCase_ == CmdOneofCase.ReadCredentials) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cmdCase_ == CmdOneofCase.SignData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SignData);
      }
      if (cmdCase_ == CmdOneofCase.ReadCredentials) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadCredentials);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      switch (other.CmdCase) {
        case CmdOneofCase.SignData:
          if (SignData == null) {
            SignData = new global::com.intercede.BluetoothSmartcard.Commands.SignData();
          }
          SignData.MergeFrom(other.SignData);
          break;
        case CmdOneofCase.ReadCredentials:
          if (ReadCredentials == null) {
            ReadCredentials = new global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials();
          }
          ReadCredentials.MergeFrom(other.ReadCredentials);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::com.intercede.BluetoothSmartcard.Commands.SignData subBuilder = new global::com.intercede.BluetoothSmartcard.Commands.SignData();
            if (cmdCase_ == CmdOneofCase.SignData) {
              subBuilder.MergeFrom(SignData);
            }
            input.ReadMessage(subBuilder);
            SignData = subBuilder;
            break;
          }
          case 18: {
            global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials subBuilder = new global::com.intercede.BluetoothSmartcard.Commands.ReadCredentials();
            if (cmdCase_ == CmdOneofCase.ReadCredentials) {
              subBuilder.MergeFrom(ReadCredentials);
            }
            input.ReadMessage(subBuilder);
            ReadCredentials = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignData : pb::IMessage<SignData> {
    private static readonly pb::MessageParser<SignData> _parser = new pb::MessageParser<SignData>(() => new SignData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignData(SignData other) : this() {
      switch (other.DirectionCase) {
        case DirectionOneofCase.Request:
          Request = other.Request.Clone();
          break;
        case DirectionOneofCase.Response:
          Response = other.Response.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignData Clone() {
      return new SignData(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest Request {
      get { return directionCase_ == DirectionOneofCase.Request ? (global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest) direction_ : null; }
      set {
        direction_ = value;
        directionCase_ = value == null ? DirectionOneofCase.None : DirectionOneofCase.Request;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse Response {
      get { return directionCase_ == DirectionOneofCase.Response ? (global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse) direction_ : null; }
      set {
        direction_ = value;
        directionCase_ = value == null ? DirectionOneofCase.None : DirectionOneofCase.Response;
      }
    }

    private object direction_;
    /// <summary>Enum of possible cases for the "direction" oneof.</summary>
    public enum DirectionOneofCase {
      None = 0,
      Request = 1,
      Response = 2,
    }
    private DirectionOneofCase directionCase_ = DirectionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectionOneofCase DirectionCase {
      get { return directionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirection() {
      directionCase_ = DirectionOneofCase.None;
      direction_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (DirectionCase != other.DirectionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (directionCase_ == DirectionOneofCase.Request) hash ^= Request.GetHashCode();
      if (directionCase_ == DirectionOneofCase.Response) hash ^= Response.GetHashCode();
      hash ^= (int) directionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (directionCase_ == DirectionOneofCase.Request) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (directionCase_ == DirectionOneofCase.Response) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (directionCase_ == DirectionOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (directionCase_ == DirectionOneofCase.Response) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignData other) {
      if (other == null) {
        return;
      }
      switch (other.DirectionCase) {
        case DirectionOneofCase.Request:
          if (Request == null) {
            Request = new global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest();
          }
          Request.MergeFrom(other.Request);
          break;
        case DirectionOneofCase.Response:
          if (Response == null) {
            Response = new global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse();
          }
          Response.MergeFrom(other.Response);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest subBuilder = new global::com.intercede.BluetoothSmartcard.Commands.SignatureRequest();
            if (directionCase_ == DirectionOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 18: {
            global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse subBuilder = new global::com.intercede.BluetoothSmartcard.Commands.SignatureResponse();
            if (directionCase_ == DirectionOneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadCredentials : pb::IMessage<ReadCredentials> {
    private static readonly pb::MessageParser<ReadCredentials> _parser = new pb::MessageParser<ReadCredentials>(() => new ReadCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadCredentials(ReadCredentials other) : this() {
      switch (other.DirectionCase) {
        case DirectionOneofCase.Request:
          Request = other.Request.Clone();
          break;
        case DirectionOneofCase.Response:
          Response = other.Response.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadCredentials Clone() {
      return new ReadCredentials(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest Request {
      get { return directionCase_ == DirectionOneofCase.Request ? (global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest) direction_ : null; }
      set {
        direction_ = value;
        directionCase_ = value == null ? DirectionOneofCase.None : DirectionOneofCase.Request;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse Response {
      get { return directionCase_ == DirectionOneofCase.Response ? (global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse) direction_ : null; }
      set {
        direction_ = value;
        directionCase_ = value == null ? DirectionOneofCase.None : DirectionOneofCase.Response;
      }
    }

    private object direction_;
    /// <summary>Enum of possible cases for the "direction" oneof.</summary>
    public enum DirectionOneofCase {
      None = 0,
      Request = 1,
      Response = 2,
    }
    private DirectionOneofCase directionCase_ = DirectionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectionOneofCase DirectionCase {
      get { return directionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirection() {
      directionCase_ = DirectionOneofCase.None;
      direction_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (DirectionCase != other.DirectionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (directionCase_ == DirectionOneofCase.Request) hash ^= Request.GetHashCode();
      if (directionCase_ == DirectionOneofCase.Response) hash ^= Response.GetHashCode();
      hash ^= (int) directionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (directionCase_ == DirectionOneofCase.Request) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (directionCase_ == DirectionOneofCase.Response) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (directionCase_ == DirectionOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (directionCase_ == DirectionOneofCase.Response) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadCredentials other) {
      if (other == null) {
        return;
      }
      switch (other.DirectionCase) {
        case DirectionOneofCase.Request:
          if (Request == null) {
            Request = new global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest();
          }
          Request.MergeFrom(other.Request);
          break;
        case DirectionOneofCase.Response:
          if (Response == null) {
            Response = new global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse();
          }
          Response.MergeFrom(other.Response);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest subBuilder = new global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest();
            if (directionCase_ == DirectionOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 18: {
            global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse subBuilder = new global::com.intercede.BluetoothSmartcard.Commands.CredentialResponse();
            if (directionCase_ == DirectionOneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CredentialRequest : pb::IMessage<CredentialRequest> {
    private static readonly pb::MessageParser<CredentialRequest> _parser = new pb::MessageParser<CredentialRequest>(() => new CredentialRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CredentialRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialRequest(CredentialRequest other) : this() {
      usage_ = other.usage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialRequest Clone() {
      return new CredentialRequest(this);
    }

    /// <summary>Field number for the "usage" field.</summary>
    public const int UsageFieldNumber = 1;
    private global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest.Types.KeyUsage usage_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest.Types.KeyUsage Usage {
      get { return usage_; }
      set {
        usage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CredentialRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CredentialRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Usage != other.Usage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Usage != 0) hash ^= Usage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Usage != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Usage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Usage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Usage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CredentialRequest other) {
      if (other == null) {
        return;
      }
      if (other.Usage != 0) {
        Usage = other.Usage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            usage_ = (global::com.intercede.BluetoothSmartcard.Commands.CredentialRequest.Types.KeyUsage) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CredentialRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum KeyUsage {
        [pbr::OriginalName("NO_USAGE")] NoUsage = 0,
        [pbr::OriginalName("SIGN")] Sign = 1,
        [pbr::OriginalName("ENCRYPT")] Encrypt = 2,
        [pbr::OriginalName("VERIFY")] Verify = 4,
        [pbr::OriginalName("DECRYPT")] Decrypt = 8,
      }

    }
    #endregion

  }

  public sealed partial class Credential : pb::IMessage<Credential> {
    private static readonly pb::MessageParser<Credential> _parser = new pb::MessageParser<Credential>(() => new Credential());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Credential> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credential() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credential(Credential other) : this() {
      identifier_ = other.identifier_;
      credential_ = other.credential_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credential Clone() {
      return new Credential(this);
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 1;
    private pb::ByteString identifier_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Identifier {
      get { return identifier_; }
      set {
        identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "credential" field.</summary>
    public const int Credential_FieldNumber = 2;
    private pb::ByteString credential_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Credential_ {
      get { return credential_; }
      set {
        credential_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Credential);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Credential other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Identifier != other.Identifier) return false;
      if (Credential_ != other.Credential_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Identifier.Length != 0) hash ^= Identifier.GetHashCode();
      if (Credential_.Length != 0) hash ^= Credential_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Identifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Identifier);
      }
      if (Credential_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Credential_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Identifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Identifier);
      }
      if (Credential_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Credential_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Credential other) {
      if (other == null) {
        return;
      }
      if (other.Identifier.Length != 0) {
        Identifier = other.Identifier;
      }
      if (other.Credential_.Length != 0) {
        Credential_ = other.Credential_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Identifier = input.ReadBytes();
            break;
          }
          case 18: {
            Credential_ = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CredentialResponse : pb::IMessage<CredentialResponse> {
    private static readonly pb::MessageParser<CredentialResponse> _parser = new pb::MessageParser<CredentialResponse>(() => new CredentialResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CredentialResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialResponse(CredentialResponse other) : this() {
      credentials_ = other.credentials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CredentialResponse Clone() {
      return new CredentialResponse(this);
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::com.intercede.BluetoothSmartcard.Commands.Credential> _repeated_credentials_codec
        = pb::FieldCodec.ForMessage(10, global::com.intercede.BluetoothSmartcard.Commands.Credential.Parser);
    private readonly pbc::RepeatedField<global::com.intercede.BluetoothSmartcard.Commands.Credential> credentials_ = new pbc::RepeatedField<global::com.intercede.BluetoothSmartcard.Commands.Credential>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::com.intercede.BluetoothSmartcard.Commands.Credential> Credentials {
      get { return credentials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CredentialResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CredentialResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!credentials_.Equals(other.credentials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= credentials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      credentials_.WriteTo(output, _repeated_credentials_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += credentials_.CalculateSize(_repeated_credentials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CredentialResponse other) {
      if (other == null) {
        return;
      }
      credentials_.Add(other.credentials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            credentials_.AddEntriesFrom(input, _repeated_credentials_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignatureRequest : pb::IMessage<SignatureRequest> {
    private static readonly pb::MessageParser<SignatureRequest> _parser = new pb::MessageParser<SignatureRequest>(() => new SignatureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureRequest(SignatureRequest other) : this() {
      plaintext_ = other.plaintext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureRequest Clone() {
      return new SignatureRequest(this);
    }

    /// <summary>Field number for the "plaintext" field.</summary>
    public const int PlaintextFieldNumber = 1;
    private pb::ByteString plaintext_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Plaintext {
      get { return plaintext_; }
      set {
        plaintext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Plaintext != other.Plaintext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Plaintext.Length != 0) hash ^= Plaintext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Plaintext.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Plaintext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Plaintext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Plaintext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatureRequest other) {
      if (other == null) {
        return;
      }
      if (other.Plaintext.Length != 0) {
        Plaintext = other.Plaintext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Plaintext = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignatureResponse : pb::IMessage<SignatureResponse> {
    private static readonly pb::MessageParser<SignatureResponse> _parser = new pb::MessageParser<SignatureResponse>(() => new SignatureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignatureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.intercede.BluetoothSmartcard.Commands.CredentialserviceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureResponse(SignatureResponse other) : this() {
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignatureResponse Clone() {
      return new SignatureResponse(this);
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 1;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignatureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignatureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Signature.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignatureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
